/*ЗАДАНИЕ №1
Дан код: 
*/

alert("Задание №1")

var a = 1, b = 1, c, d;
c = ++a; alert(c); 
/* Выводится 2 по той причине, что перед присвоением "с" значения "а" происходит инкремент "а", при этом "а" в последующем коде равно двум*/

d = b++; alert(d); 
/* Выводится 1 по той причине, что сначала происходит присвоение "d" и только потом происходит инкремент "b", при этом "b" в последующем коде равен двум */

c = (2+ ++a); alert(c); // Выводится 5, т.к сначала просиходит инкремент "а" и к результату прибавляется 2, при этом "а" далее будет равно трём 

d = (2+ b++); alert(d); // Выводится 4, т.к сначала происходит сложение 2 + (b = 2), а затем происходит инкремент "b" до значения 3

alert(a); // Выводится 3, т.к после всех действий "а" стало равным трем

alert(b); // Выводится 3, т.к после всех действий "b" стало равным трем

/*
Почему код даёт именно такие результаты?
*/

/*ЗАДАНИЕ №2
Чему будет равен x в примере ниже?
var a = 2;
var x = 1 + (a *= 2);
*/
console.log("задание №2");
var a = 2;
var x = 1 + (a *= 2);
/*х будет равен 5, т.к согласно порядку сначала происходит умножение а = 2 на 2. а затем прибавление к результату единицы */
console.log(x); /*проверка ответа*/


/*ЗАДАНИЕ №3
Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
* если a и b положительные, вывести их разность;
* если а и b отрицательные, вывести их произведение;
* если а и b разных знаков, вывести их сумму;
ноль можно считать положительным числом.
*/
console.log("задание №3");

/*Результат если обе переменные положительные*/
let a1 = 2;
let b1 = 6;
if(a1 >= 0 && b1 >= 0){
    console.log(a1 - b1)
} else if(a1 < 0 && b1 < 0){
    console.log(a1 * b1)
} else if(a1 < 0 && b1 >= 0 || a1 >=0 && b1 <0){
    console.log(a1 + b1)
}

/*Результат если обе переменные отрицательные*/
 a1 = -2;
 b1 = -6;
if(a1 >= 0 && b1 >= 0){
    console.log(a1 - b1)
} else if(a1 < 0 && b1 < 0){
    console.log(a1 * b1)
} else if(a1 < 0 && b1 >= 0 || a1 >=0 && b1 <0){
    console.log(a1 + b1)
}

/*Результат если переменные разных знаков*/
a1 = -2;
 b1 = 6;
if(a1 >= 0 && b1 >= 0){
    console.log(a1 - b1)
} else if(a1 < 0 && b1 < 0){
    console.log(a1 * b1)
} else if(a1 < 0 && b1 >= 0 || a1 >=0 && b1 <0){
    console.log(a1 + b1)
}


/*ЗАДАНИЕ №4
Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
*/
console.log("задание №4");

let a2 = 0;

switch (a2){
    case 0:
        console.log(0);
    case 1:
        console.log(1);
    case 2:
        console.log(2);
    case 3:
        console.log(3);
    case 4:
        console.log(4);
    case 5:
        console.log(5);
    case 6:
        console.log(6);
    case 7:    
        console.log(7);
    case 8:    
        console.log(8);
    case 9:    
        console.log(9);
    case 10:
        console.log(10);
    case 11:    
        console.log(11);
    case 12:    
        console.log(12);
    case 13:    
        console.log(13);
    case 14:
        console.log(14);
    case 15:    
        console.log(15);
        break;
    default:
        console.log("Неверное значение переменной");

}

/*ЗАДАНИЕ №5
Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.
*/
alert("задание №5");

let a3 = 2;
let b3 = 3;

function add( arg1, arg2){
    resolt = arg1 + arg2;
    return resolt;
}

function sub( arg1, arg2){
   resolt = arg1 - arg2;
    return resolt;
}

function mult( arg1, arg2){
   resolt = arg1 * arg2;
    return resolt;
}

function div( arg1, arg2){
   resolt = arg1 / arg2;
    return resolt;
}

alert("Результат сложения равен: " + add(a3, b3));
alert("Результат вычитания равен: " + sub(a3, b3));
alert("Результат умножения равен " + mult(a3, b3));
alert("Результат деления равен " + div(a3, b3));

/*ЗАДАНИЕ №6
Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).
*/
alert("задание №6");
var x = parseInt(prompt('Введите первое число'));
var y = parseInt(prompt('Введите второе число'));
var z = prompt('Введите "+", "-", "*", или "/"', "");

/*parseInt для преобразования строки в численную переменную, т.к при сложении компилятор рассматривал цифры как строки текста и выводил не верный результат*/

function mathOperation(arg1, arg2, operation){
    switch (operation){
        case '+':
            resolt = arg1 + arg2;
            break;
        case '-':
            resolt = arg1 - arg2;
            break;
        case '*':
            resolt = arg1 * arg2;
            break;
        case '/':
            resolt = arg1 / arg2;
            break;
        default:
            resolt = "Неверное значение переменной";
    }
    return resolt;
}

alert(mathOperation(x, y, z));

/*ЗАДАНИЕ №7
Сравнить null и 0. Попробуйте объяснить результат.
*/
console.log("Задание №7")
let q = null;
let e = 0;

if (q==e){
    console.log(q + "равно" + e)
}
else
    console.log(q + " неравно " + e)

    
if (q<e){
    console.log(q + "меньше" + e)
}
else
    console.log(q + " не меньше " + e)


if (q>e){
    console.log(q + " больше " + e)
}
else
    console.log(q + " не больше " + e)


if (q>=e){
    console.log(q + " больше или равно " + e)
}
else
    console.log(q + " неравно и не больше " + e)
/*Думаю те результаты что мы получаем при сравнении это результат алгоритма по которому производятся сравнения, и там нет конкретного алгоритма для сравнения null и 0, так как у null тип отличен от всех остальных и преобразовать его правильно для сравнения не предоставляется возможным*/

/*ЗАДАНИЕ №8
С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.
*/